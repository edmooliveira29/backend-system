name: api-backend
on:
  push:
    branches: [ main ]

jobs:
  test-unit:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - run: |- 
        npm install
        echo "MONGO_URL=${{secrets.MONGO_URL}}" >> .env
    - name: Start MongoDB v6.0
      uses: supercharge/mongodb-github-action@1.2.0
      with:
        mongodb-version: 6.0
    - name: Running unit tests
      run: |- 
        echo 'RUNNING TESTS'
    - uses: actions/labeler@v4
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Coverage Tests
      id: coverageComment
      uses: MishaKav/jest-coverage-comment@main
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        coverage-summary-path: ./coverage/coverage-summary.json
        coverage-title: My Coverage Title
        coverage-path: ./coverage/coverage.txt

    - name: Create the badge about tests
      if: github.ref == 'refs/heads/main'
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_TOKEN }}
        gistID: ${{secrets.GIST_ID}}
        filename: jest-coverage-comment__main.json
        label: coverage
        message: ${{ steps.coverageComment.outputs.coverage }}%
        color: ${{ steps.coverageComment.outputs.color }}
        namedLogo: typescript

  deploy:
    needs: test-unit
    runs-on: ubuntu-latest

    steps:
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.ACCOUNT_KEY_JSON_GOOGLE }}
          project_id: ${{ secrets.PROJECT_ID_GOOGLE }}

      - name: Set project with default
        run: |- 
          gcloud config set project ${{ secrets.PROJECT_ID_GOOGLE }}

      - name: Running command
        run: |-
          mkdir -p ~/.ssh/
          echo "${{secrets.$ACCESS_GITHUB_INSTANCE}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{secrets.IP_INSTANCE_GOOGLE}} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: SSH into Instance and run script
        run: |-
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa system@${{secrets.IP_INSTANCE_GOOGLE}} "/home/${{secrets.USER_INSTANCE_GOOGLE }}/run-deploy.sh"
          
      - name: Deleting user-profiles
        run: |- 
          for i in $(gcloud compute os-login ssh-keys list | grep -v FINGERPRINT); do echo $i; gcloud compute os-login ssh-keys remove --key $i; done
