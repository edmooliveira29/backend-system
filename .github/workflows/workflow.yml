name: api-backend
on:
  push:
    branches: [ main ]
jobs:
  # test-unit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Start MongoDB v4.2
  #       uses: supercharge/mongodb-github-action@1.2.0
  #       with:
  #         mongodb-version: 4.2
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - run: npm install
  #     - run: echo "MONGO_URL=${{vars.MONGO_URL}}" >> .env
  #     - run: npm run test:unit
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v1
  #       with:
  #         path: './coverage'
  deploy:
    # needs: test-unit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.ACCOUNT_KEY_JSON_GOOGLE }}
          project_id: ${{ secrets.PROJECT_ID_GOOGLE }}

      - name: Set project with default
        run: |- 
          gcloud config set project ${{ secrets.PROJECT_ID_GOOGLE }}

      - name: Running command
        run: |-
          gcloud compute ssh ${{ secrets.NAME_INSTANCE_GOOGLE }} \
          --zone=${{ secrets.ZONE_INSTANCE_GOOGLE }} \
          --command='/home/${{secrets.USER_INSTANCE_GOOGLE}}/run-deploy.sh'
          
      - name: Deleting user-profiles
        run: |- 
          for i in $(gcloud compute os-login ssh-keys list | grep -v FINGERPRINT); do echo $i; gcloud compute os-login ssh-keys remove --key $i; done
    # runs-on: ubuntu-latest
    # env: 
    #   ACCOUNT_KEY_JSON_GOOGLE: ${{ secrets.ACCOUNT_KEY_JSON_GOOGLE }}
    # steps:
    #   - id: 'auth'
    #     uses: 'google-github-actions/auth@v1'
    #     with:
    #       credentials_json: "${{ secrets.ACCOUNT_KEY_JSON_GOOGLE }}"

    #   - name: 'Set up Cloud SDK'
    #     uses: 'google-github-actions/setup-gcloud@v1'
          
    #   - name: Run commands via SSH
    #     run: |
    #       echo "$ACCOUNT_KEY_JSON_GOOGLE" >> key.json
    #       cat key.json
    #       gcloud auth activate-service-account --key-file=key.json  
    #       gcloud compute ssh ${{secrets.NAME_INSTANCE_GOOGLE}} --zone=${{secrets.ZONE_INSTANCE_GOOGLE}} --command='ls && /bin/sh /home/${{secrets.USER_INSTANCE_GOOGLE}}/run-deploy.sh'
  